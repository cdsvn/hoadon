<?phpclass Authorize_model extends CI_Model {    function __construct() {        parent::__construct();    }    function login($username, $password) {        $this->db->select('id, username, fullname, password, groups, changepass, active');        $this->db->from('sys_users');        $this->db->where('username', $username);        $this->db->where('password', MD5("huynt" . $password));        $rs = $this->db->get()->result();        return $rs;    }    function get_privilege($groups) {        $this->db->select('params');        $this->db->from('sys_groups');        $this->db->where('id', $groups);        $this->db->where('is_delete', 0);        $query = $this->db->get();        if ($query->num_rows() > 0) {            $rs = $query->result();            $params = $rs[0]->params;            $menu = $this->list_menu();            foreach ($menu as $item) {                $params = str_replace('"' . $item->id . '"', '"' . $item->route . '"', $params);            }            return $params;        } else {            return "";        }    }    function list_menu() {        $this->db->select('id, route');        $this->db->from('sys_menus');        $this->db->where('is_delete', 0);        $query = $this->db->get();        if ($query->num_rows() > 0) {            $rs = $query->result();            return $rs;        } else {            return array();        }    }    function active_menu() {        $query = $this->db->select('id, route, parent')->from('sys_menus')->where('is_delete', 0)->get();        $objrs = $query->result();        $arrP = array();        $arrS = array();        foreach ($objrs as $item) {            if ($item->parent == 0) {                $arrP[$item->id] = ',' . $item->route . ',';            } else {                $arrS[$item->id] = $item;            }        }        foreach ($arrP as $k => $v) {            foreach ($arrS as $item) {                if ($item->parent == $k) {                    $arrP[$k] = $arrP[$k] . $item->route . ",";                }            }        }        return $arrP;    }    function resetpassword($email, $password) {        $this->db->update('sys_users', array("password" => $password), "email = '" . $email . "'");    }    function checkemailexist($email) {        $total = $this->db->select("id")->from('sys_users')->where("email", $email)->where("is_delete", 0)->count_all_results();        return $total;    }    function changefirstpass($id, $pass) {        $this->db->update('sys_users', array("password" => MD5("huynt" . $pass), "changepass" => 0), "id = " . $id);    }}